/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package kelompok_2;

/**
 *
 * @author Nia Oktalina
 */
import java.awt.Color;
import java.awt.HeadlessException;
import java.sql.*;
import javax.swing.JOptionPane;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import net.sf.dynamicreports.jasper.builder.JasperReportBuilder;
import net.sf.dynamicreports.report.builder.DynamicReports;
import net.sf.dynamicreports.report.builder.column.ColumnBuilders;
import net.sf.dynamicreports.report.builder.component.ComponentBuilders;
import net.sf.dynamicreports.report.builder.component.TextFieldBuilder;
import net.sf.dynamicreports.report.builder.style.PaddingBuilder;
import net.sf.dynamicreports.report.builder.style.StyleBuilder;
import net.sf.dynamicreports.report.constant.HorizontalAlignment;
import net.sf.dynamicreports.report.exception.DRException;
import org.apache.log4j.BasicConfigurator;


public class tabel_pembeli extends javax.swing.JFrame {
    Connection con;
    Statement stat;
    ResultSet rs;
    String sql;
    

    /**
     * Creates new form tabel_pembeli
     */
    public tabel_pembeli() {
        initComponents();
        koneksidatabase DB = new koneksidatabase();
        DB.buka_koneksi();
        con = DB.cn;
        stat = DB.st;
        
        // menentukan apa yang terjadi saat salah satu baris row/baris pada 
        // tabel jika dipilih (oleh mouse maupun keyboard)
        tabel.getSelectionModel().addListSelectionListener(new ListSelectionListener(){
                @Override
                public void valueChanged(ListSelectionEvent event) {
                    // tidak ada row yang terpilih, maka jangan lakukan apa-apa
                    if(tabel.getSelectionModel().isSelectionEmpty()){
                        return;
                    }
                    vid_pembeli.setText(tabel.getValueAt(tabel.getSelectedRow(), 0).toString());
                    vnama.setText(tabel.getValueAt(tabel.getSelectedRow(), 1).toString());
                    bedit.setEnabled(true);
                    bhapus.setEnabled(true);
                    bsimpan.setEnabled(false);
                }
            }); 
        
        // menentukan apa yang terjadi saat teks pada text vid_pembeli berubah 
        // baik oleh keyboard maupun copy paste
        vid_pembeli.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void changedUpdate(DocumentEvent e) {
                setTombolBerdasarkanTextField();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                setTombolBerdasarkanTextField();
            }

            @Override
            public void insertUpdate(DocumentEvent e) {
                setTombolBerdasarkanTextField();
            }
        });
        
        // menentukan apa yang terjadi saat teks pada text vnama berubah 
        // baik oleh keyboard maupun copy paste
        vnama.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void changedUpdate(DocumentEvent e) {
                setTombolBerdasarkanTextField();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                setTombolBerdasarkanTextField();
            }

            @Override
            public void insertUpdate(DocumentEvent e) {
                setTombolBerdasarkanTextField();
            }
        });

        BasicConfigurator.configure();
        
        tampil();
        
        
    }
    
    private void setTombolBerdasarkanTextField(){
        // periksa jika tombol vid_pembeli atau vnama ada yang masih kosong
        if (vid_pembeli.getText().isEmpty() || vnama.getText().isEmpty()) {
            // periksa apakah baris/row pada tabel ada yang sedang terpilih
            if(tabel.getSelectionModel().isSelectionEmpty()){
                bsimpan.setEnabled(false);
            }else{
                bedit.setEnabled(false);
            }
        } else {
            // periksa apakah baris/row pada tabel ada yang sedang terpilih
            if(tabel.getSelectionModel().isSelectionEmpty()){
                bsimpan.setEnabled(true);
            }else{
                bedit.setEnabled(true);
            }
        }        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        vid_pembeli = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        vnama = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        bbaru = new javax.swing.JButton();
        bsimpan = new javax.swing.JButton();
        bedit = new javax.swing.JButton();
        bhapus = new javax.swing.JButton();
        breport = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabel = new javax.swing.JTable(){
            public boolean isCellEditable(int row, int column) {
                return false;
            };
        };

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(200, 100));

        jLabel2.setText("ID Pembeli");

        jLabel1.setText("Nama Pembeli");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(vnama, javax.swing.GroupLayout.PREFERRED_SIZE, 334, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(vid_pembeli, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(vid_pembeli, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(vnama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 14, Short.MAX_VALUE))
        );

        jPanel2.setLayout(new java.awt.GridLayout(1, 0, 5, 5));

        bbaru.setText("Baru");
        bbaru.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bbaruActionPerformed(evt);
            }
        });
        jPanel2.add(bbaru);

        bsimpan.setText("Simpan");
        bsimpan.setEnabled(false);
        bsimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bsimpanActionPerformed(evt);
            }
        });
        jPanel2.add(bsimpan);

        bedit.setText("Edit");
        bedit.setEnabled(false);
        bedit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                beditActionPerformed(evt);
            }
        });
        jPanel2.add(bedit);

        bhapus.setText("Hapus");
        bhapus.setEnabled(false);
        bhapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bhapusActionPerformed(evt);
            }
        });
        jPanel2.add(bhapus);

        breport.setText("Report");
        breport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                breportActionPerformed(evt);
            }
        });
        jPanel2.add(breport);

        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel3.setLayout(new java.awt.BorderLayout());

        tabel.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tabel.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(tabel);

        jPanel3.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 463, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, 157, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bsimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bsimpanActionPerformed
        boolean idPembeliSudahAda = false;
        try {
            sql = "INSERT INTO pembeli VALUES ('"+vid_pembeli.getText()+"','"+vnama.getText()+"')";
            stat.execute(sql);
            JOptionPane.showMessageDialog(null,"Data Berhasil Disimpan");
            tampil();
            kosongkanTextField();
            
        } catch (SQLException | HeadlessException e) {
            idPembeliSudahAda = e.getMessage().substring(0, 15).equals("Duplicate entry");
            if(!idPembeliSudahAda){
                System.err.println(e.getMessage());
            }
        }
        if (idPembeliSudahAda) {
            int jawaban = JOptionPane.showConfirmDialog(null, "Pembeli dengan ID " + vid_pembeli.getText() + " sudah ada.\nApakah data pembeli tersebut akan diperbarui dengan data yang baru dimasukkan?", "Data sudah ada, timpa?", JOptionPane.YES_NO_OPTION);
            if (jawaban == JOptionPane.YES_OPTION) {
                editDataPembeli();
            }
        }
    }//GEN-LAST:event_bsimpanActionPerformed

    private void bhapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bhapusActionPerformed
        try {
            sql = "delete from pembeli where id_pembeli = '"+vid_pembeli.getText()+"'";
            stat.execute(sql);
            JOptionPane.showMessageDialog(null, "Data berhasil dihapus");
            tampil();
            kosongkanTextField();
        } catch (SQLException | HeadlessException e) {
            System.err.println(e.getMessage());
        }
    }//GEN-LAST:event_bhapusActionPerformed

    private void editDataPembeli(){
        try {
            sql = "update pembeli set nama = '"+vnama.getText()+"' where id_pembeli = '"+vid_pembeli.getText()+"'";
            stat.execute(sql);
            JOptionPane.showMessageDialog(null, "Data berhasil diedit");
            tampil();
        } catch (SQLException | HeadlessException e) {
            System.err.println(e.getMessage());
        }        
    }
    
    private void beditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_beditActionPerformed
        editDataPembeli();
    }//GEN-LAST:event_beditActionPerformed

    private void bbaruActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bbaruActionPerformed
        kosongkanTextField();
    }//GEN-LAST:event_bbaruActionPerformed

    private void breportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_breportActionPerformed
        String pembeli_sql = "select * from pembeli";
        JasperReportBuilder rb = DynamicReports.report();
        rb.setDataSource(pembeli_sql, this.con);
        rb.columns(
                DynamicReports.col.column("ID", "id_pembeli", DynamicReports.type.integerType())
                , DynamicReports.col.column("Nama", "nama", DynamicReports.type.stringType())
        );
        
        TextFieldBuilder titleField = DynamicReports.cmp.text("Pembeli");
        titleField.setStyle(DynamicReports.stl.style()
                .bold()
                .setFontSize(24)
                .setHorizontalAlignment(HorizontalAlignment.CENTER));
        rb.title(titleField);
        
        StyleBuilder titleStyle         = DynamicReports.stl.style().bold()
                .setFontSize(24)
                .setHorizontalAlignment(HorizontalAlignment.CENTER); 
        StyleBuilder boldStyle         = DynamicReports.stl.style().bold(); 
	StyleBuilder boldCenteredStyle = DynamicReports.stl.style(boldStyle)
	                                    .setHorizontalAlignment(HorizontalAlignment.CENTER);
	StyleBuilder columnTitleStyle  = DynamicReports.stl.style(boldCenteredStyle)
	                                    .setBorder(DynamicReports.stl.pen1Point())
	                                    .setBackgroundColor(Color.LIGHT_GRAY);
	StyleBuilder columnStyle  = DynamicReports.stl.style().setPadding(5)
	                                    .setBorder(DynamicReports.stl.pen1Point());
        
        rb.setTitleStyle(titleStyle);
        rb.setColumnTitleStyle(columnTitleStyle);
        rb.setColumnStyle(columnStyle);
        //rb.detail(DynamicReports.cmp.horizontalGap(100));
        try{
            rb.show();
        }catch(DRException e){
            
        }
    }//GEN-LAST:event_breportActionPerformed

    private void kosongkanTextField(){
        tabel.clearSelection();
        vid_pembeli.setText(null);
        vnama.setText(null);

        vid_pembeli.requestFocus();
        bedit.setEnabled(false);
        bhapus.setEnabled(false);
        bsimpan.setEnabled(false);
        
    }
        private void tampil(){
        int n = 0;
        DefaultTableModel tableModel;
        tabel.setToolTipText("");
        Object [] row = {"ID","NAMA"};
        tableModel = new DefaultTableModel(null,row);
        tabel.setModel(tableModel);
        try {
            sql= "select * from pembeli";
            rs = stat.executeQuery(sql);
            while (rs.next()){
                n = n+1;
                String id=rs.getString(1);
                String nama=rs.getString(2);
                String data[]={id,nama};
                tableModel.addRow(data);
            }
        } catch (SQLException e) {
              System.err.println(e.getMessage());
      }
        
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(tabel_pembeli.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            @Override
            public void run() {
                new tabel_pembeli().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bbaru;
    private javax.swing.JButton bedit;
    private javax.swing.JButton bhapus;
    private javax.swing.JButton breport;
    private javax.swing.JButton bsimpan;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabel;
    private javax.swing.JTextField vid_pembeli;
    private javax.swing.JTextField vnama;
    // End of variables declaration//GEN-END:variables
}
